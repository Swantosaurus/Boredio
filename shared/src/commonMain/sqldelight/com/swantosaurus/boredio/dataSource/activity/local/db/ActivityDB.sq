

import kotlin.Boolean;

CREATE TABLE ActivityDatabaseModel (
    key TEXT NOT NULL PRIMARY KEY,
    activity TEXT NOT NULL,
    type TEXT NOT NULL,
    participants INTEGER NOT NULL,
    price REAL NOT NULL,
    link TEXT NOT NULL,
    accessibility REAL NOT NULL,
    favorite INTEGER NOT NULL,
    userRating INTEGER,
    fetchDate INTEGER NOT NULL,
    completed INTEGER AS Boolean NOT NULL,
    completeDate INTEGER,
    ignore INTEGER AS Boolean NOT NULL,
    isDailyFeed INTEGER AS Boolean NOT NULL,
    path TEXT
);


insertActivity:
INSERT INTO ActivityDatabaseModel (activity, type, participants, price, link, key, accessibility, favorite, userRating, fetchDate, completed, completeDate, ignore, isDailyFeed, path)
VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

updateActivity:
UPDATE ActivityDatabaseModel
SET activity = ?, type = ?, participants = ?, price = ?, link = ?, accessibility = ?, favorite = ?, userRating = ?, fetchDate = ?, completed = ?, completeDate = ?, ignore = ?, isDailyFeed = ?, path = ?
WHERE key = ?;

selectAllActivities:
SELECT * FROM ActivityDatabaseModel;

selectActivityByKey:
SELECT * FROM ActivityDatabaseModel WHERE key = ?;

selectAllIgnoredActivities:
SELECT * FROM ActivityDatabaseModel WHERE ignore = 1;

selectAllCompletedActivities:
SELECT * FROM ActivityDatabaseModel WHERE completed = 1;

selectAllFavoriteActivities:
SELECT * FROM ActivityDatabaseModel WHERE favorite = 1;

getDailyFeed:
SELECT * FROM ActivityDatabaseModel WHERE ActivityDatabaseModel.isDailyFeed = 1;

getAllWithGeneratedPath:
SELECT *
FROM ActivityDatabaseModel
WHERE ActivityDatabaseModel.path IS NOT NULL;

getAllCompletedActivitiesInTimeRange:
SELECT * FROM ActivityDatabaseModel WHERE completed = 1 AND completeDate BETWEEN ? AND ?;